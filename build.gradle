plugins {
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id "io.freefair.aspectj.post-compile-weaving" version "5.3.0"
}

ext {
    baseName = 'logging-library'
    logstashVersion = '4.11'
    lombokVersion = '1.18.8'
    aspectjVersion = '1.9.6'
    loggingLibraryCoreVersion = '0.0.5-SNAPSHOT'
}

test {
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}

group = 'com.azimo.tukan'
sourceCompatibility = 11
targetCompatibility = 11

configurations {
    ajc
    aspects
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR8'
        mavenBom 'org.springframework.boot:spring-boot-dependencies:2.2.9.RELEASE'
    }
}

jar {
    manifest { attributes("Implementation-Vendor": "Azimo") }
    manifest { attributes("Implementation-Version": archiveVersion) }
}

repositories {
    mavenLocal()
    maven { url "https://nexus.azimo.com/repository/maven-central/" }
    maven { url "https://nexus.azimo.com/repository/maven-releases/" }
    maven { url "https://nexus.azimo.com/repository/io.confluent/" }
    maven { url "https://nexus.azimo.com/repository/apache.snapshots/" }
}

dependencies {
    /** Spring **/
    compile "org.springframework.boot:spring-boot-starter"

    ajc "org.aspectj:aspectjtools:1.9.6"
    implementation "com.azimo.tukan:lib-azimo-logging:${loggingLibraryCoreVersion}"
    aspects "com.azimo.tukan:lib-azimo-logging:${loggingLibraryCoreVersion}"

    /** lombok **/
    compile "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    /** Logging **/
    compile "net.logstash.logback:logstash-logback-encoder:${logstashVersion}"
}

/*
def aspectj = { destDir, aspectPath, inpath, classpath ->
    ant.taskdef(resource: "org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties",
            classpath: configurations.ajc.asPath)

    ant.iajc(
            maxmem: "1024m", fork: "true", Xlint: "ignore",
            destDir: destDir,
            aspectPath: aspectPath,
            inpath: inpath,
            classpath: classpath,
            source: project.sourceCompatibility,
            target: project.targetCompatibility
    )
}

compileJava {
    doLast {
        aspectj project.sourceSets.main.output.classesDirs.files[0],
                configurations.aspects.asPath,
                project.sourceSets.main.output.classesDirs.files[0],
                project.sourceSets.main.runtimeClasspath.asPath
    }
}

compileTestJava {
    dependsOn jar

    doLast {
        aspectj project.sourceSets.test.output.classesDirs.files[0],
                configurations.aspects.asPath + jar.path,
                project.sourceSets.test.output.classesDirs.files[0],
                project.sourceSets.test.runtimeClasspath.asPath
    }
}
*/

compileJava {
    ajc {
        enabled = true
        classpath.setFrom configurations.ajc
        options {
            aspectpath.setFrom configurations.aspects
            compilerArgs = []
        }
    }
}

